(function() {var implementors = {};
implementors["thermite"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.f32x8.html\" title=\"struct thermite::backends::avx2::f32x8\">f32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vf32::f32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.f32x8.html\" title=\"struct thermite::backends::avx2::f32x8\">f32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vf32::f32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.f64x8.html\" title=\"struct thermite::backends::avx2::f64x8\">f64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vf64::f64x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.f64x8.html\" title=\"struct thermite::backends::avx2::f64x8\">f64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vf64::f64x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.i32x8.html\" title=\"struct thermite::backends::avx2::i32x8\">i32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vi32::i32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.i32x8.html\" title=\"struct thermite::backends::avx2::i32x8\">i32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vi32::i32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.i64x8.html\" title=\"struct thermite::backends::avx2::i64x8\">i64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vi64::i64x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.i64x8.html\" title=\"struct thermite::backends::avx2::i64x8\">i64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vi64::i64x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.u32x8.html\" title=\"struct thermite::backends::avx2::u32x8\">u32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vu32::u32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.u32x8.html\" title=\"struct thermite::backends::avx2::u32x8\">u32x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vu32::u32x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a> as <a class=\"trait\" href=\"thermite/trait.Simd.html\" title=\"trait thermite::Simd\">Simd</a>&gt;::<a class=\"type\" href=\"thermite/trait.Simd.html#associatedtype.Vu32\" title=\"type thermite::Simd::Vu32\">Vu32</a>&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.u64x8.html\" title=\"struct thermite::backends::avx2::u64x8\">u64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vu64::u64x8"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/bit/trait.Shr.html\" title=\"trait core::ops::bit::Shr\">Shr</a>&lt;u32&gt; for <a class=\"struct\" href=\"thermite/backends/avx2/struct.u64x8.html\" title=\"struct thermite::backends::avx2::u64x8\">u64x8</a>&lt;<a class=\"struct\" href=\"thermite/backends/avx2/struct.AVX2.html\" title=\"struct thermite::backends::avx2::AVX2\">AVX2</a>&gt;","synthetic":false,"types":["thermite::backends::avx2::vu64::u64x8"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()