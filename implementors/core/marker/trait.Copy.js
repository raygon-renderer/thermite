(function() {var implementors = {};
implementors["thermite"] = [{"text":"impl Copy for AVX1","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for f32x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for f64x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for i32x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for i64x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for u32x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd&gt; Copy for u64x8&lt;S&gt;","synthetic":false,"types":[]},{"text":"impl Copy for AVX2","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for BranchfreeDivider&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Copy&gt; Copy for Divider&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd, T:&nbsp;Copy&gt; Copy for VPtr&lt;S, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S::Vusize: Copy,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd, V:&nbsp;Copy&gt; Copy for Mask&lt;S, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Simd, V&gt; Copy for BitMask&lt;S, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Copy + Simd, V:&nbsp;Copy + SimdFloatVector&lt;S&gt;&gt; Copy for Compensated&lt;S, V&gt;","synthetic":false,"types":[]},{"text":"impl&lt;S:&nbsp;Simd, V:&nbsp;SimdFloatVector&lt;S&gt;, P:&nbsp;Policy&gt; Copy for Complex&lt;S, V, P&gt;","synthetic":false,"types":[]},{"text":"impl Copy for PrecisionPolicy","synthetic":false,"types":[]},{"text":"impl&lt;P:&nbsp;Copy + Policy&gt; Copy for ExtraPrecision&lt;P&gt;","synthetic":false,"types":[]},{"text":"impl Copy for UltraPerformance","synthetic":false,"types":[]},{"text":"impl Copy for Performance","synthetic":false,"types":[]},{"text":"impl Copy for Precision","synthetic":false,"types":[]},{"text":"impl Copy for Size","synthetic":false,"types":[]},{"text":"impl Copy for Reference","synthetic":false,"types":[]},{"text":"impl Copy for SimdInstructionSet","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()