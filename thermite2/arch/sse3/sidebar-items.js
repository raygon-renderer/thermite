initSidebarItems({"fn":[["_mm_addsub_pd","Alternatively add and subtract packed double-precision (64-bit) floating-point elements in `a` to/from packed elements in `b`."],["_mm_addsub_ps","Alternatively add and subtract packed single-precision (32-bit) floating-point elements in `a` to/from packed elements in `b`."],["_mm_hadd_pd","Horizontally adds adjacent pairs of double-precision (64-bit) floating-point elements in `a` and `b`, and pack the results."],["_mm_hadd_ps","Horizontally adds adjacent pairs of single-precision (32-bit) floating-point elements in `a` and `b`, and pack the results."],["_mm_hsub_pd","Horizontally subtract adjacent pairs of double-precision (64-bit) floating-point elements in `a` and `b`, and pack the results."],["_mm_hsub_ps","Horizontally adds adjacent pairs of single-precision (32-bit) floating-point elements in `a` and `b`, and pack the results."],["_mm_lddqu_si128","Loads 128-bits of integer data from unaligned memory. This intrinsic may perform better than `_mm_loadu_si128` when the data crosses a cache line boundary."],["_mm_loaddup_pd","Loads a double-precision (64-bit) floating-point element from memory into both elements of return vector."],["_mm_movedup_pd","Duplicate the low double-precision (64-bit) floating-point element from `a`."],["_mm_movehdup_ps","Duplicate odd-indexed single-precision (32-bit) floating-point elements from `a`."],["_mm_moveldup_ps","Duplicate even-indexed single-precision (32-bit) floating-point elements from `a`."]]});