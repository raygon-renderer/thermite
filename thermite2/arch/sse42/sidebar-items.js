initSidebarItems({"fn":[["_mm_cmpestra","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return `1` if `b` did not contain a null character and the resulting mask was zero, and `0` otherwise."],["_mm_cmpestrc","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return `1` if the resulting mask was non-zero, and `0` otherwise."],["_mm_cmpestri","Compares packed strings `a` and `b` with lengths `la` and `lb` using the control in `IMM8` and return the generated index. Similar to `_mm_cmpistri` with the exception that `_mm_cmpistri` implicitly determines the length of `a` and `b`."],["_mm_cmpestrm","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return the generated mask."],["_mm_cmpestro","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return bit `0` of the resulting bit mask."],["_mm_cmpestrs","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return `1` if any character in a was null, and `0` otherwise."],["_mm_cmpestrz","Compares packed strings in `a` and `b` with lengths `la` and `lb` using the control in `IMM8`, and return `1` if any character in `b` was null, and `0` otherwise."],["_mm_cmpgt_epi64","Compares packed 64-bit integers in `a` and `b` for greater-than, return the results."],["_mm_cmpistra","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and return `1` if `b` did not contain a null character and the resulting mask was zero, and `0` otherwise."],["_mm_cmpistrc","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and return `1` if the resulting mask was non-zero, and `0` otherwise."],["_mm_cmpistri","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8` and return the generated index. Similar to [`_mm_cmpestri`] with the exception that [`_mm_cmpestri`] requires the lengths of `a` and `b` to be explicitly specified."],["_mm_cmpistrm","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and return the generated mask."],["_mm_cmpistro","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and return bit `0` of the resulting bit mask."],["_mm_cmpistrs","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and returns `1` if any character in `a` was null, and `0` otherwise."],["_mm_cmpistrz","Compares packed strings with implicit lengths in `a` and `b` using the control in `IMM8`, and return `1` if any character in `b` was null. and `0` otherwise."],["_mm_crc32_u16","Starting with the initial value in `crc`, return the accumulated CRC32 value for unsigned 16-bit integer `v`."],["_mm_crc32_u32","Starting with the initial value in `crc`, return the accumulated CRC32 value for unsigned 32-bit integer `v`."],["_mm_crc32_u64","Starting with the initial value in `crc`, return the accumulated CRC32 value for unsigned 64-bit integer `v`."],["_mm_crc32_u8","Starting with the initial value in `crc`, return the accumulated CRC32 value for unsigned 8-bit integer `v`."]]});